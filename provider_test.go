package gconfig

import (
	"testing"

	gconfigv1alpha1 "github.com/common-fate/gconfig/gen/gconfig/v1alpha1"
	"github.com/stretchr/testify/assert"
)

func TestProvidersToYAML(t *testing.T) {
	provider := gconfigv1alpha1.Provider{
		Id:   "aws",
		Name: "Test AWS Org",
		Details: &gconfigv1alpha1.Provider_Aws{
			Aws: &gconfigv1alpha1.AWSProviderDetails{
				OrgManagementAccountId: "2223334445555",
				Accounts: []*gconfigv1alpha1.Account{
					{
						Type:    gconfigv1alpha1.Account_TYPE_AWS_ACCOUNT,
						Id:      "123456789012",
						Name:    "test",
						Aliases: []string{"tester"},
					},
				},
			},
		},

		AccessHandlers: []*gconfigv1alpha1.AccessHandler{
			{
				Url: "http://accesshandler.example.com",
			},
		},
	}

	res, err := ProvidersToYAML(&provider)
	if err != nil {
		t.Fatal(err)
	}

	expected := `# This file has been automatically generated by Granted. DO NOT EDIT.
# To enrol accounts belonging to this provider with Granted, run "granted accounts enrol --provider aws" (https://granted.dev/adding-accounts)
version: granted/providers/v1alpha1
providers:
  aws:
    type: aws
    name: Test AWS Org
    managementAccountId: "2223334445555"
    accessHandlers:
      - url: http://accesshandler.example.com
    accounts:
      - id: "123456789012"
        name: test
        type: AWS::Account
        aliases:
          - tester
`
	assert.Equal(t, expected, string(res))

}
